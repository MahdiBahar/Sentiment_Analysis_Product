version: '3.8'

services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: MEC_Sentiment          # The name of the database that will be created in PostgreSQL
      POSTGRES_USER: postgres            # The username for PostgreSQL
      POSTGRES_PASSWORD: postgres    # The password for PostgreSQL user
    ports:
    # Map port 5432 on your host to port 5432 in the container
      - "5432:5432"                   
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persist data in a Docker volume named 'postgres_data'
      # We want to block the execuation of init_table_sentiment.sql. So, I comment the code
      - ./init_table_sentiment.sql:/docker-entrypoint-initdb.d/init_table_sentiment.sql  # Initialize with SQL script
    #Wait for postgresql to response
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready -U postgres -d MEC_Sentiment"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  
  app_scraper:
    build: .
    environment:
      DB_HOST: db                    # Hostname for PostgreSQL (the `db` service name within Docker Compose)
      DB_NAME: MEC_Sentiment              # Database name to connect to
      DB_USER: postgres                  # Database username
      DB_PASS: postgres             # Database password
      DB_PORT: 5432                    # Database port
    depends_on:
      db:
        condition: service_healthy # Ensures that the 'db' service starts before 'scraper'
    command: ["python", "-u", "app_scraper.py"]  # Script to run for `app_scraper`

  comment_scraper:
    build: .
    shm_size: '1gb'  # Increase shared memory size
    environment:
      DB_HOST: db                    # Hostname for PostgreSQL (the `db` service name within Docker Compose)
      DB_NAME: MEC_Sentiment              # Database name to connect to
      DB_USER: postgres                  # Database username
      DB_PASS: postgres             # Database password
      DB_PORT: 5432                    # Database port
    depends_on:
      db:
        condition: service_healthy # Ensures that the 'db' service starts before 'scraper'
    command: ["python", "-u","comment_scraper.py"]  # Corrected command for `comment_scraper`
    
  sentiment-analyzer:
    build:
      context: .
      dockerfile: Dockerfile.analyzer
    environment:
      # - HF_HOME=/app/.cache  # Set Hugging Face cache directory
      DB_HOST: db                    # Hostname for PostgreSQL
      DB_NAME: MEC_Sentiment              # Database name to connect to
      DB_USER: postgres                  # Database username
      DB_PASS: postgres             # Database password
      DB_PORT: 5432                    # Database port
      # APP_ID: 28                    # Specify the app_id to analyze (default: 1) # for V2
      APP_IDS: 28,29,30  # List of app_ids to process # for V3
    depends_on:
      db:
        condition: service_healthy   # Ensures that the 'db' service starts before 'sentiment-analyzer'
    # volumes:
    #   - /home/docker-data/cache:/app/.cache  # Mount persistent cache directory

volumes:
  postgres_data:                       # Docker volume to persist PostgreSQL data
